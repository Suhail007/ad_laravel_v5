[nixpkgs]
channel = "nixpkgs-unstable"

# System packages and setup
[phases.setup]
# Nix packages to install
nixPkgs = [
    "php82",
    "php82Extensions.curl",
    "php82Extensions.gd",
    "php82Extensions.mbstring",
    "php82Extensions.zip",
    "php82Extensions.xml",
    "php82Extensions.fileinfo",
    "php82Extensions.openssl",
    "php82Extensions.pdo_mysql",
    "php82Extensions.tokenizer",
    "php82Extensions.simplexml",
    "php82Extensions.xmlwriter",
    "php82Extensions.mysqlnd",
    "php82Extensions.bcmath",
    "php82Extensions.opcache",
    "php82Extensions.sodium",
    "php82Extensions.exif",
    "nodejs-18_x",
    "git"
]

# System commands to run during setup
cmds = [
    "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer",
    "apt-get update",
    "apt-get install -y --no-install-recommends libpng-dev libjpeg-dev libfreetype6-dev libzip-dev unzip"
]

# Setup environment variables if not set
[phases.setup.environment]
APP_ENV = "production"
APP_DEBUG = "false"
APP_KEY = "base64:ILW8+fwGf4vZ/zT999P0g5arvERKm02VCu+J3YyGCEo="

# Install phase - install dependencies
[phases.install]
cmds = [
    "composer install --no-interaction --optimize-autoloader --no-dev",
    "[ -f .env ] || cp .env.example .env",
    "grep -q '^APP_KEY=$' .env && php artisan key:generate --no-interaction || true"
]

# Build phase - prepare the application
[phases.build]
cmds = [
    "[ -f package.json ] && npm install && npm run build || true",
    "php artisan config:cache",
    "php artisan route:cache",
    "php artisan view:cache",
    "php artisan storage:link"
]

# Start phase - run migrations and start the server
[phases.start]
cmds = [
    "php artisan migrate --force --no-interaction",
    "php artisan serve --host=0.0.0.0 --port=$PORT"
]

# Add a health check
[statics.healthcheck]
path = "/health"
initialDelay = 30
timeout = 105
